---
import MainGridLayout from '../layouts/MainGridLayout.astro'
import { Icon } from 'astro-icon/components'
import { i18n } from '../i18n/translation'
import I18nKey from '../i18n/i18nKey'
import projectsData from '../constants/projects'
import ButtonTag from '@components/control/ButtonTag.astro'

const projectTypes = ['All', ...new Set(projectsData.map(project => project.type))]
const projectCounts: { [key: string]: number } = {
    All: projectsData.length,
    ...Object.fromEntries(
        projectTypes
            .filter(type => type !== 'All')
            .map(type => [type, projectsData.filter(project => project.type === type).length])
    )
}
---

<MainGridLayout title={i18n(I18nKey.projects)} description={i18n(I18nKey.projects)}>
    <div class="mb-4 sm:mb-6 flex flex-wrap justify-center gap-1.5 sm:gap-2 px-2 sm:px-0">
        {projectTypes.map(type => (
            <button
                class="filter-btn px-2 sm:px-4 py-1.5 sm:py-2 text-xs sm:text-sm bg-[var(--card-bg)] text-black dark:text-white rounded-md border-2 border-solid border-gray-200 hover:border-[var(--primary)] transition duration-500 hover:rounded-md dark:border-gray-700 dark:hover:border-[var(--primary)] dark:hover:bg-gray-800"
                data-type={type}
            >
                <span class="whitespace-nowrap">{type} ({projectCounts[type]})</span>
            </button>
        ))}
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 w-full px-2 sm:px-0" id="projects-grid">
        {projectsData.map((project) => (
            <div 
                class="project-card bg-[var(--card-bg)] h-full transform overflow-hidden rounded-md border-2 border-solid border-gray-200 transition duration-500 hover:rounded-md hover:border-[var(--primary)] dark:border-gray-700 dark:hover:border-[var(--primary)] dark:hover:bg-gray-800"
                data-type={project.type}
            >
                <div class="p-4 sm:p-6">
                    <div class="font-bold text-lg sm:text-xl text-center mb-1 dark:text-neutral-50">{project.title}</div>
                    <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2"></div>
                    <p class="text-center text-neutral-400 mb-3 sm:mb-4 text-sm sm:text-base leading-relaxed">{project.description}</p>
                    
                    <div class="flex flex-wrap justify-center gap-1.5 sm:gap-2 mb-3 sm:mb-4">
                        {project.techStack.map((tech) => (
                            <ButtonTag>{tech}</ButtonTag>
                        ))}
                    </div>
                    
                    <div class="flex gap-2 sm:gap-3 justify-center">
                        {project.href && (
                            <a 
                                href={project.href}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="btn-regular rounded-lg h-9 w-9 sm:h-10 sm:w-10 active:scale-90"
                                aria-label={project.href.includes('play.google.com') ? 'Google Play Store' : 'Live Demo'}
                            >
                                <Icon 
                                    name={project.href.includes('play.google.com') ? 'fa6-brands:google-play' : 'fa6-solid:globe'} 
                                    class="text-[1.25rem] sm:text-[1.5rem]" 
                                />
                            </a>
                        )}
                        
                        {project.repo && (
                            <a 
                                href={project.repo}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="btn-regular rounded-lg h-9 w-9 sm:h-10 sm:w-10 active:scale-90"
                                aria-label={project.repo.includes('gitlab.com') ? 'GitLab Repository' : 'GitHub Repository'}
                            >
                                <Icon 
                                    name={project.repo.includes('gitlab.com') ? 'fa6-brands:gitlab' : 'fa6-brands:github'} 
                                    class="text-[1.25rem] sm:text-[1.5rem]" 
                                />
                            </a>
                        )}
                    </div>
                </div>
            </div>
        ))}
    </div>
</MainGridLayout>

<script>
    function initializeFilters() {
        const filterButtons = document.querySelectorAll('.filter-btn');
        const projectCards = document.querySelectorAll('.project-card');
        document.querySelector('[data-type="All"]')?.classList.add('active');

        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                // Update active button
                filterButtons.forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');

                const selectedType = button.getAttribute('data-type');

                projectCards.forEach(card => {
                    if (selectedType === 'All' || card.getAttribute('data-type') === selectedType) {
                        (card as HTMLElement).style.display = 'block';
                    } else {
                        (card as HTMLElement).style.display = 'none';
                    }
                });
            });
        });
    }

    initializeFilters();

    document.addEventListener('astro:page-load', initializeFilters);
</script>

<style>
    .filter-btn.active {
        background-color: var(--primary);
        border-color: var(--primary);
        color: white;
    }
</style>
